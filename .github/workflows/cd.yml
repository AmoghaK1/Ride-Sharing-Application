name: CD - Deploy on Self-Hosted (Docker)

on:
  workflow_run:
    workflows: ["CI - Build and Push Docker Images"]
    types: [completed]
  workflow_dispatch:

concurrency:
  group: cd-deploy-${{ github.ref }}
  cancel-in-progress: false

permissions:
  contents: read

jobs:
  deploy:
    if: ${{ github.event_name == 'workflow_dispatch' || (github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_branch == 'main') }}
    runs-on: self-hosted
    timeout-minutes: 30
    steps:
      - name: Prepare env vars
        shell: bash
        run: |
          echo "DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}" >> $GITHUB_ENV
          echo "DOCKERHUB_TOKEN=${{ secrets.DOCKERHUB_TOKEN }}" >> $GITHUB_ENV
          echo "FRONTEND_IMAGE=${{ secrets.DOCKERHUB_USERNAME }}/ride-sharing-frontend" >> $GITHUB_ENV
          echo "BACKEND_IMAGE=${{ secrets.DOCKERHUB_USERNAME }}/ride-sharing-backend" >> $GITHUB_ENV
          # Path to .env file on the server for backend container
          # Set this in repo/environment secrets. Example: /home/ec2-user/ride/.env
          echo "ENV_FILE_PATH=${{ secrets.ENV_FILE_PATH }}" >> $GITHUB_ENV

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Pull latest images
        shell: bash
        run: |
          set -euo pipefail
          docker pull "$FRONTEND_IMAGE:latest"
          docker pull "$BACKEND_IMAGE:latest"

      - name: Stop and remove old containers (if any)
        shell: bash
        run: |
          set -euo pipefail
          for name in ride-frontend ride-backend; do
            if [ "$(docker ps -aq -f name=^${name}$)" ]; then
              echo "Stopping and removing $name"
              docker rm -f "$name" || true
            else
              echo "No existing container named $name"
            fi
          done

      - name: Run backend container
        shell: bash
        run: |
          set -euo pipefail
          if [ -z "${ENV_FILE_PATH:-}" ]; then
            echo "ENV_FILE_PATH is not set. Please configure 'ENV_FILE_PATH' secret to point to your backend .env file on the server." >&2
            exit 1
          fi
          docker run -d \
            --name ride-backend \
            --restart unless-stopped \
            --env-file "$ENV_FILE_PATH" \
            -p 8000:8000 \
            "$BACKEND_IMAGE:latest"

      - name: Run frontend container
        shell: bash
        run: |
          set -euo pipefail
          docker run -d \
            --name ride-frontend \
            --restart unless-stopped \
            -p 5173:80 \
            "$FRONTEND_IMAGE:latest"

      - name: Show running containers
        run: docker ps --format 'table {{.Names}}\t{{.Image}}\t{{.Status}}\t{{.Ports}}'
