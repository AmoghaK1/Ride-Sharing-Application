name: CI - Build and Push Docker Images

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

concurrency:
  group: ci-docker-images-${{ github.ref }}
  cancel-in-progress: false

permissions:
  contents: read

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Initialize env vars
        run: |
          echo "DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}" >> $GITHUB_ENV
          echo "DOCKERHUB_TOKEN=${{ secrets.DOCKERHUB_TOKEN }}" >> $GITHUB_ENV
          # Optional: set DOCKERHUB_NAMESPACE if you push to an org; falls back to username if not provided
          ns="${{ secrets.DOCKERHUB_NAMESPACE }}"
          if [ -z "$ns" ]; then ns="${{ secrets.DOCKERHUB_USERNAME }}"; fi
          echo "DOCKERHUB_NAMESPACE=$ns" >> $GITHUB_ENV
          echo "FRONTEND_IMAGE=$ns/ride-sharing-frontend" >> $GITHUB_ENV
          echo "BACKEND_IMAGE=$ns/ride-sharing-backend" >> $GITHUB_ENV
          echo "FRONTEND_API_BASE_URL=${{ secrets.FRONTEND_API_BASE_URL }}" >> $GITHUB_ENV

      - name: Show target images (sanity)
        run: |
          echo "Pushing as user: $DOCKERHUB_USERNAME"
          echo "Target namespace: $DOCKERHUB_NAMESPACE"
          echo "Backend tag: $BACKEND_IMAGE:latest"
          echo "Frontend tag: $FRONTEND_IMAGE:latest"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        if: env.DOCKERHUB_USERNAME != '' && env.DOCKERHUB_TOKEN != ''
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}
          registry: docker.io

      - name: Derive tags
        id: meta
        run: |
          SHORT_SHA=${GITHUB_SHA::12}
          echo "short_sha=$SHORT_SHA" >> $GITHUB_OUTPUT

      - name: Build and push Backend image
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          file: ./backend/Dockerfile.backend
          push: true
          tags: |
            ${{ env.BACKEND_IMAGE }}:latest
            ${{ env.BACKEND_IMAGE }}:${{ steps.meta.outputs.short_sha }}
          cache-from: type=registry,ref=${{ env.BACKEND_IMAGE }}:buildcache
          cache-to: type=registry,ref=${{ env.BACKEND_IMAGE }}:buildcache,mode=max

      - name: Build and push Frontend image
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          file: ./frontend/Dockerfile.frontend
          push: true
          build-args: |
            VITE_API_BASE_URL=${{ env.FRONTEND_API_BASE_URL }}
          tags: |
            ${{ env.FRONTEND_IMAGE }}:latest
            ${{ env.FRONTEND_IMAGE }}:${{ steps.meta.outputs.short_sha }}
          cache-from: type=registry,ref=${{ env.FRONTEND_IMAGE }}:buildcache
          cache-to: type=registry,ref=${{ env.FRONTEND_IMAGE }}:buildcache,mode=max

      - name: Summary
        run: |
          echo "Backend image: ${{ env.BACKEND_IMAGE }}:latest" >> $GITHUB_STEP_SUMMARY
          echo "Frontend image: ${{ env.FRONTEND_IMAGE }}:latest" >> $GITHUB_STEP_SUMMARY
